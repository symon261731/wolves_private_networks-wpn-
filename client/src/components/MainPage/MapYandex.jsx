import React, { useEffect, useState } from 'react';
import { useSelector } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import './MapYandex.scss';

export default function Map() {
  const [myMap, setMyMap] = useState(null);
  const navigate = useNavigate();
  const servers = useSelector((state) => state.servers);
  // console.log(servers);
  const country = { shir: 55.751574, dolg: 37.573856 };

  useEffect(() => {
    // eslint-disable-next-line no-undef
    ymaps.ready(() => {
      // eslint-disable-next-line no-undef
      const map = new ymaps.Map('map', {
      // –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å
      // –µ—ë —Ü–µ–Ω—Ç—Ä –∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è.
        center: [country.shir, country.dolg],
        zoom: 3,
      }, {
        searchControlProvider: 'yandex#search',

        restrictMapArea: [[85.23618, -178.9], [-73.87011, 181]],
      });

      setMyMap(map);
    });
  }, []);

  useEffect(() => {
    // eslint-disable-next-line no-undef
    ymaps.ready(() => {
      myMap.geoObjects.removeAll();
      // eslint-disable-next-line no-undef
      const MyIconContentLayout = ymaps.templateLayoutFactory.createClass( // –°–æ–∑–¥–∞—ë–º –º–∞–∫–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.
        '<div style="color: #FFFFFF; font-weight: bold;">$[properties.iconContent]</div>',
      );

      servers.forEach((el) => {
        // eslint-disable-next-line no-undef
        const myGeocoder = ymaps.geocode(el.location);
        myGeocoder.then(
          (res) => {
            const coordinates = res.geoObjects.get(0).geometry.getCoordinates();
            // eslint-disable-next-line no-undef
            const myPlacemarkWithContent = new ymaps.Placemark(coordinates, {
              hintContent: [el.location, `${el.rating}üê∫`],
              balloonContent: el.price,
              iconContent: '',
            }, {
              iconLayout: 'default#imageWithContent', // –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–π —Ç–∏–ø –º–∞–∫–µ—Ç–∞.
              iconImageHref: 'https://cdn-icons-png.flaticon.com/512/22/22723.png', // –°–≤–æ—ë –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –º–µ—Ç–∫–∏.
              iconImageSize: [48, 48], // –†–∞–∑–º–µ—Ä—ã –º–µ—Ç–∫–∏.
              iconImageOffset: [-24, -24], // –°–º–µ—â–µ–Ω–∏–µ –ª–µ–≤–æ–≥–æ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É–≥–ª–∞ –∏–∫–æ–Ω–∫–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ, –µ—ë "–Ω–æ–∂–∫–∏" (—Ç–æ—á–∫–∏ –ø—Ä–∏–≤—è–∑–∫–∏).
              iconContentOffset: [15, 15], // –°–º–µ—â–µ–Ω–∏–µ —Å–ª–æ—è —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å–ª–æ—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π.
              iconContentLayout: MyIconContentLayout, // –ú–∞–∫–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.
            });
            myMap?.geoObjects
              .add(myPlacemarkWithContent);

            myPlacemarkWithContent.events.add(['click'], () => {
              navigate(`/server/${el.id}`);
            });
          },
        );
      });
    });
  }, [myMap, country]);

  return (

    <div className="img-fluid" id="map" style={{ width: '800px', height: '1200px', backgroundColor: '#cbdfbd' }} />

  );
}
